{"ast":null,"code":"function detectBrowser() {\n  var navigator = window && window.navigator;\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    return 'not a browser';\n  }\n\n  // Firefox.\n  if (navigator.mozGetUserMedia) {\n    return 'Firefox';\n  }\n  if (navigator.webkitGetUserMedia) {\n    // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\n    if (window.hasOwnProperty('webkitRTCPeerConnection')) {\n      return 'Chrome';\n    }\n    if (navigator.userAgent.match(/Version\\/(\\d+).(\\d+)/)) {\n      return 'Safari';\n    }\n    return 'WebKit browser without WebRTC support';\n  }\n  if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n    // Edge.\n    return 'Edge';\n  }\n  if (navigator.userAgent.indexOf('MSIE ') > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n    return 'Internet Explorer';\n  }\n  if (navigator.mediaDevices && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n    // Safari, with webkitGetUserMedia removed.\n    return 'Safari';\n  }\n  // Default fallthrough: not supported.\n  return 'unsupported browser';\n}\n;\nfunction firefoxExtensionRequired() {\n  var match = navigator.userAgent.match(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i);\n  var version = match && match.length > 1 && match[1] || '';\n  return version < '52.0';\n}\n;\n\n/* global chrome OT ScreenSharingAccPack OTKAnalytics define */\n(function () {\n  /** Include external dependencies */\n  var _;\n  var $;\n  var OTKAnalytics;\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    /* eslint-disable import/no-unresolved */\n    _ = require('underscore');\n    $ = require('jquery');\n    OTKAnalytics = require('opentok-solutions-logging');\n    /* eslint-enable import/no-unresolved */\n  } else {\n    _ = this._;\n    $ = this.$;\n    OTKAnalytics = this.OTKAnalytics;\n  }\n\n  /** Private Variables*/\n  var _this; // Reference to instance of ScreenSharingAccPack\n  var _active; // Currently sharing screen?\n  var _accPack; // Common layer API\n  var _session; // OpenTok session\n\n  var _screenSharingControl = ['<div class=\"ots-video-control circle share-screen\" id=\"startScreenSharing\"></div>'].join('\\n');\n  var _screenSharingView = ['<div class=\"hidden\" id=\"screenShareView\">', '<div class=\"ots-feed-main-video\">', '<div class=\"ots-feed-holder\" id=\"videoHolderScreenShare\"></div>', '<div class=\"ots-feed-mask\"></div>', '<img src=\"https://assets.tokbox.com/solutions/images/widget-video-mask.png\"/>', '</div>', '<div class=\"ots-feed-call-controls\" id=\"feedControlsFromScreen\">', '<button class=\"ots-icon-screen active hidden\" id=\"endScreenShareBtn\"></button>', '</div>', '</div>'].join('\\n');\n  var _screenDialogsExtensions = [/* eslint-disable max-len */\n  '<div id=\"dialog-form-chrome\" class=\"ots-ss-modal\" style=\"display: none;\">', '<div class=\"ots-modal-body\">', '<div class=\"ots-modal-title with-icon\">', '<i class=\"ots-icon-share-large\"></i>', '<span>Screen Share<br/>Extension Installation</span>', '</div>', '<p>You need a Chrome extension to share your screen. Install Screensharing Extension. Once you have installed, please, click the share screen button again.</p>', '<button id=\"btn-install-plugin-chrome\" class=\"ots-btn-install\">Accept</button>', '<button id=\"btn-cancel-plugin-chrome\" class=\"ots-cancel-btn-install\"></button>', '</div>', '</div>', '<div id=\"dialog-form-ff\" class=\"ots-ss-modal\" style=\"display: none;\">', '<div class=\"ots-modal-body\">', '<div class=\"ots-modal-title with-icon\">', '<i class=\"ots-icon-share-large\"></i>', '<span>Screen Share<br/>Extension Installation</span>', '</div>', '<p>You need a Firefox extension to share your screen. Install Screensharing Extension. Once you have installed, refresh your browser and click the share screen button again.</p>', '<a href=\"#\" id=\"btn-install-plugin-ff\" class=\"ots-btn-install\">Install extension</a>', '<a href=\"#\" id=\"btn-cancel-plugin-ff\" class=\"ots-cancel-btn-install\"></a>', '</div>', '</div>'\n  /* eslint-enable max-len */].join('\\n');\n\n  /** Private Methods */\n\n  /** Analytics */\n  var _otkanalytics;\n\n  // vars for the analytics logs. Internal use\n  var _logEventData = {\n    clientVersion: 'js-vsol-x.y.z',\n    // x.y.z filled by npm build script\n    componentId: 'screenSharingAccPack',\n    name: 'guidScreensharingAccPack',\n    actionInitialize: 'Init',\n    actionStart: 'Start',\n    actionEnd: 'End',\n    enableAnnotations: 'EnableAnnotations',\n    disableAnnotations: 'DisableAnnotations',\n    enableAudioScreenSharing: 'EnableAudioScreenSharing',\n    disableAudioScreenSharing: 'DisableAudioScreenSharing',\n    variationAttempt: 'Attempt',\n    variationError: 'Failure',\n    variationSuccess: 'Success'\n  };\n  var _logAnalytics = function () {\n    // init the analytics logs\n    var _source = window.location.href;\n    var otkanalyticsData = {\n      clientVersion: _logEventData.clientVersion,\n      source: _source,\n      componentId: _logEventData.componentId,\n      name: _logEventData.name\n    };\n    _otkanalytics = new OTKAnalytics(otkanalyticsData);\n    var sessionInfo = {\n      sessionId: _session.id,\n      connectionId: _session.connection.connectionId,\n      partnerId: _session.apiKey\n    };\n    _otkanalytics.addSessionInfo(sessionInfo);\n  };\n  var _log = function (action, variation) {\n    var data = {\n      action: action,\n      variation: variation\n    };\n    _otkanalytics.logEvent(data);\n  };\n  var _defaultScreenProperties = {\n    insertMode: 'append',\n    width: '100%',\n    height: '100%',\n    showControls: false,\n    style: {\n      buttonDisplayMode: 'off'\n    },\n    videoSource: 'window'\n  };\n  var _setupUI = function (parent) {\n    $('body').append(_this.screenDialogsExtensions);\n    _this.appendControl && $(_this.controlsContainer).append(_screenSharingControl);\n    $(parent).append(_screenSharingView);\n  };\n  var _toggleScreenSharingButton = function (show) {\n    $('#startScreenSharing')[show ? 'show' : 'hide']();\n  };\n\n  // Trigger event via common layer API\n  var _triggerEvent = function (event, data) {\n    if (_accPack) {\n      _accPack.triggerEvent(event, data);\n    }\n  };\n\n  /**\n   * Create a publisher for the screen.  If we're using annotation, we first need\n   * to create the annotion window and get a reference to its annotation container\n   * element so that we can pass it to the initPublisher function.\n   * @returns {promise} < Resolve: [Object] Container element for annotation in external window >\n   */\n  var _initPublisher = function (publisherOptions) {\n    var createPublisher = function (publisherDiv) {\n      var innerDeferred = $.Deferred();\n      var getContainer = function () {\n        if (publisherDiv) {\n          return publisherDiv;\n        }\n        if (typeof _this.screenSharingContainer === 'function') {\n          return document.querySelector(_this.screenSharingContainer('publisher', 'screen'));\n        } else {\n          return _this.screenSharingContainer;\n        }\n      };\n      var container = getContainer();\n      var properties = Object.assign({}, _this.localScreenProperties || _defaultScreenProperties, publisherOptions);\n      _this.publisher = OT.initPublisher(container, properties, function (error) {\n        if (error) {\n          _triggerEvent('screenSharingError', error);\n          innerDeferred.reject(_.extend(_.omit(error, 'messsage'), {\n            message: 'Error starting the screen sharing'\n          }));\n        } else {\n          _this.publisher.on('mediaStopped', function () {\n            end();\n          });\n          innerDeferred.resolve();\n        }\n      });\n      return innerDeferred.promise();\n    };\n    var outerDeferred = $.Deferred();\n    if (_this.annotation && _this.externalWindow) {\n      _log(_logEventData.enableAnnotations, _logEventData.variationSuccess);\n      _accPack.setupExternalAnnotation().then(function (annotationWindow) {\n        _this.annotationWindow = annotationWindow || null;\n        var annotationElements = annotationWindow.createContainerElements();\n        createPublisher(annotationElements.publisher).then(function () {\n          outerDeferred.resolve(annotationElements.annotation);\n        });\n      });\n    } else {\n      createPublisher().then(function () {\n        outerDeferred.resolve();\n      });\n    }\n    return outerDeferred.promise();\n  };\n\n  /**\n   * Start publishing the screen\n   * @param annotationContainer\n   */\n  var _publish = function (annotationContainer) {\n    _session.publish(_this.publisher, function (error) {\n      if (error) {\n        // Let's write our own error message\n        var customError = _.omit(error, 'message');\n        if (error.code === 1500 && navigator.userAgent.indexOf('Firefox') !== -1) {\n          $('#dialog-form-ff').toggle();\n        } else {\n          var errorMessage;\n          if (error.code === 1010) {\n            errorMessage = 'Check your network connection';\n          } else {\n            errorMessage = 'Error sharing the screen';\n          }\n          customError.message = errorMessage;\n          _triggerEvent('screenSharingError', customError);\n          _log(_logEventData.actionStart, _logEventData.variationError);\n        }\n      } else {\n        if (_this.annotation && _this.externalWindow) {\n          _accPack.linkAnnotation(_this.publisher, annotationContainer, _this.annotationWindow);\n          _log(_logEventData.actionInitialize, _logEventData.variationSuccess);\n        }\n        _active = true;\n        _triggerEvent('startScreenSharing', _this.publisher);\n        _log(_logEventData.actionStart, _logEventData.variationSuccess);\n      }\n    });\n  };\n\n  /**\n   * Stop publishing the screen\n   */\n  var _stopPublishing = function () {\n    _session.unpublish(_this.publisher);\n  };\n\n  /** Public Methods */\n\n  var extensionAvailable = function () {\n    var deferred = $.Deferred();\n    if (window.location.protocol === 'http:' && !_this.dev) {\n      alert(\"Screensharing only works under 'https', please add 'https://' in front of your debugger url.\");\n      deferred.reject('https required');\n    }\n    OT.checkScreenSharingCapability(function (response) {\n      if (!response.supported || response.extensionRegistered === false) {\n        alert('This browser does not support screen sharing! Please use Chrome, Firefox or IE!');\n        deferred.reject('browser support not available');\n      } else if (response.extensionInstalled === false) {\n        if (detectBrowser() === 'Firefox') {\n          if (!firefoxExtensionRequired()) {\n            deferred.resolve();\n          } else {\n            $('#dialog-form-ff').toggle();\n            deferred.reject('screensharing extension not installed');\n          }\n        } else {\n          $('#dialog-form-chrome').toggle();\n          deferred.reject('screensharing extension not installed');\n        }\n      } else {\n        deferred.resolve();\n      }\n    });\n    return deferred.promise();\n  };\n  /**\n   * @param {Object} [publisherOptions]  - Properties for the screen sharing publisher.\n   */\n  var start = function (publisherOptions) {\n    _log(_logEventData.actionStart, _logEventData.variationAttempt);\n    extensionAvailable(_this.extensionID, _this.extensionPathFF).then(_initPublisher(publisherOptions)).then(_publish).fail(function (error) {\n      console.log('Error starting screensharing: ', error);\n      _log(_logEventData.actionStart, _logEventData.variationError);\n    });\n  };\n  var end = function (callEnded) {\n    _stopPublishing();\n    _active = false;\n    if (callEnded) {\n      _toggleScreenSharingButton(false);\n    }\n    _triggerEvent('endScreenSharing', _this.publisher);\n    _log(_logEventData.actionEnd, _logEventData.variationSuccess);\n  };\n\n  /** Events */\n\n  var _registerEvents = function () {\n    if (!_accPack) {\n      return;\n    }\n    var events = ['startScreenSharing', 'endScreenSharing', 'screenSharingError'];\n    _accPack.registerEvents(events);\n  };\n  var _addScreenSharingListeners = function () {\n    var startOrEnd = _.throttle(function () {\n      !!_active ? end() : start();\n    }, 750);\n    $('#startScreenSharing').on('click', startOrEnd);\n\n    /** Handlers for screensharing extension modal */\n    $('#btn-install-plugin-chrome').on('click', function () {\n      window.open(['https://chrome.google.com/webstore/detail/', _this.extensionID].join(''), '_blank');\n      $('#dialog-form-chrome').toggle();\n    });\n    $('#btn-cancel-plugin-chrome').on('click', function () {\n      $('#dialog-form-chrome').toggle();\n    });\n    $('#btn-install-plugin-ff').prop('href', _this.extensionPathFF);\n    $('#btn-install-plugin-ff').on('click', function () {\n      $('#dialog-form-ff').toggle();\n    });\n    $('#btn-cancel-plugin-ff').on('click', function () {\n      $('#dialog-form-ff').toggle();\n    });\n    if (!!_accPack) {\n      _accPack.registerEventListener('startCall', function () {\n        _toggleScreenSharingButton(true);\n      });\n      _accPack.registerEventListener('endCall', function () {\n        if (_active) {\n          end(true);\n        } else {\n          _toggleScreenSharingButton(false);\n        }\n      });\n      _accPack.registerEventListener('annotationWindowClosed', function () {\n        end();\n      });\n    }\n  };\n  var _validateExtension = function (extensionID, extensionPathFF, appendWebStoreLink) {\n    if (detectBrowser() === 'Chrome') {\n      if (!extensionID || !extensionID.length) {\n        throw new Error('Error starting the screensharing. Chrome extensionID required');\n      } else {\n        if (appendWebStoreLink) {\n          $('<link/>', {\n            rel: 'chrome-webstore-item',\n            href: ['https://chrome.google.com/webstore/detail/', extensionID].join('')\n          }).appendTo('head');\n        }\n        OT.registerScreenSharingExtension('chrome', extensionID, 2);\n      }\n    }\n  };\n  var _validateOptions = function (options) {\n    if (!_.property('session', options)) {\n      throw new Error('Screen Share Acc Pack requires an OpenTok session');\n    }\n    _session = _.property('session')(options);\n    _accPack = _.property('accPack')(options);\n    var appendLink = options.appendWebStoreLink === undefined ? true : options.appendWebStoreLink;\n    _validateExtension(_.property('extensionID')(options), _.property('extensionPathFF')(options), appendLink);\n  };\n\n  /**\n   * @constructor\n   * Represents a screensharing component\n   * @param {Object} options\n   * @param {String} options.session\n   * @param {Object} [options.accPack]\n   * @param {String} [options.extensionID]\n   * @param {String} [options.appendWebStoreLink]\n   * @param {String} [options.extentionPathFF]\n   * @param {String} [options.screensharingParent]\n   * @param {String} [options.screenDialogsExtensions]\n   * @param {String | Function} [options.screensharingContainer]\n   */\n  var ScreenSharingAccPack = function (options) {\n    _this = this;\n\n    // Check for required options\n    _validateOptions(options);\n\n    // Extend our instance\n    var optionsProps = ['annotation', 'externalWindow', 'extensionURL', 'extensionID', 'appendWebStoreLink', 'extensionPathFF', 'screenSharingContainer', 'screenSharingParent', 'controlsContainer', 'screenProperties', 'localScreenProperties', 'appendControl', 'dev', 'screenDialogsExtensions'];\n    _.extend(_this, _.defaults(_.pick(options, optionsProps), {\n      screenSharingParent: '#videoContainer',\n      screenSharingContainer: document.getElementById('videoHolderSharedScreen'),\n      controlsContainer: '#feedControls',\n      appendWebStoreLink: true,\n      appendControl: true,\n      screenDialogsExtensions: _screenDialogsExtensions\n    }));\n\n    // Do UIy things\n    _setupUI(_this.screensharingParent);\n    _registerEvents();\n    _addScreenSharingListeners();\n\n    // init analytics logs\n    _logAnalytics();\n    _log(_logEventData.actionInitialize, _logEventData.variationSuccess);\n  };\n  ScreenSharingAccPack.prototype = {\n    constructor: ScreenSharingAccPack,\n    extensionAvailable: extensionAvailable,\n    start: start,\n    end: end\n  };\n  if (typeof exports === 'object') {\n    module.exports = ScreenSharingAccPack;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return ScreenSharingAccPack;\n    });\n  } else {\n    this.ScreenSharingAccPack = ScreenSharingAccPack;\n  }\n}).call(this);","map":{"version":3,"names":["detectBrowser","navigator","window","mozGetUserMedia","webkitGetUserMedia","hasOwnProperty","userAgent","match","mediaDevices","indexOf","firefoxExtensionRequired","version","length","_","$","OTKAnalytics","module","exports","require","_this","_active","_accPack","_session","_screenSharingControl","join","_screenSharingView","_screenDialogsExtensions","_otkanalytics","_logEventData","clientVersion","componentId","name","actionInitialize","actionStart","actionEnd","enableAnnotations","disableAnnotations","enableAudioScreenSharing","disableAudioScreenSharing","variationAttempt","variationError","variationSuccess","_logAnalytics","_source","location","href","otkanalyticsData","source","sessionInfo","sessionId","id","connectionId","connection","partnerId","apiKey","addSessionInfo","_log","action","variation","data","logEvent","_defaultScreenProperties","insertMode","width","height","showControls","style","buttonDisplayMode","videoSource","_setupUI","parent","append","screenDialogsExtensions","appendControl","controlsContainer","_toggleScreenSharingButton","show","_triggerEvent","event","triggerEvent","_initPublisher","publisherOptions","createPublisher","publisherDiv","innerDeferred","Deferred","getContainer","screenSharingContainer","document","querySelector","container","properties","Object","assign","localScreenProperties","publisher","OT","initPublisher","error","reject","extend","omit","message","on","end","resolve","promise","outerDeferred","annotation","externalWindow","setupExternalAnnotation","then","annotationWindow","annotationElements","createContainerElements","_publish","annotationContainer","publish","customError","code","toggle","errorMessage","linkAnnotation","_stopPublishing","unpublish","extensionAvailable","deferred","protocol","dev","alert","checkScreenSharingCapability","response","supported","extensionRegistered","extensionInstalled","start","extensionID","extensionPathFF","fail","console","log","callEnded","_registerEvents","events","registerEvents","_addScreenSharingListeners","startOrEnd","throttle","open","prop","registerEventListener","_validateExtension","appendWebStoreLink","Error","rel","appendTo","registerScreenSharingExtension","_validateOptions","options","property","appendLink","undefined","ScreenSharingAccPack","optionsProps","defaults","pick","screenSharingParent","getElementById","screensharingParent","prototype","constructor","define","amd","call"],"sources":["/home/awolf/WebstormProjects/accelerator-sample-apps-js/react-sample-app/node_modules/opentok-screen-sharing/dist/opentok-screen-sharing.js"],"sourcesContent":["function detectBrowser() {\n\n  var navigator = window && window.navigator;\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    return 'not a browser';\n  }\n\n  // Firefox.\n  if (navigator.mozGetUserMedia) {\n    return 'Firefox';\n  }\n  if (navigator.webkitGetUserMedia) {\n    // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\n    if (window.hasOwnProperty('webkitRTCPeerConnection')) {\n      return 'Chrome';\n    }\n    if (navigator.userAgent.match(/Version\\/(\\d+).(\\d+)/)) {\n      return 'Safari';\n    }\n    return 'WebKit browser without WebRTC support';\n  }\n\n  if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    return 'Edge';\n  }\n\n  if (navigator.userAgent.indexOf('MSIE ') > 0 ||\n    !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n    return 'Internet Explorer';\n  }\n\n  if (navigator.mediaDevices && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n    // Safari, with webkitGetUserMedia removed.\n    return 'Safari';\n  }\n  // Default fallthrough: not supported.\n  return 'unsupported browser';\n};\n\nfunction firefoxExtensionRequired() {\n  var match = navigator.userAgent.match(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i);\n  var version = (match && match.length > 1 && match[1]) || '';\n  return version < '52.0';\n};\n\n/* global chrome OT ScreenSharingAccPack OTKAnalytics define */\n(function () {\n\n  /** Include external dependencies */\n  var _;\n  var $;\n  var OTKAnalytics;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    /* eslint-disable import/no-unresolved */\n    _ = require('underscore');\n    $ = require('jquery');\n    OTKAnalytics = require('opentok-solutions-logging');\n    /* eslint-enable import/no-unresolved */\n  } else {\n    _ = this._;\n    $ = this.$;\n    OTKAnalytics = this.OTKAnalytics;\n  }\n\n  /** Private Variables*/\n  var _this; // Reference to instance of ScreenSharingAccPack\n  var _active; // Currently sharing screen?\n  var _accPack; // Common layer API\n  var _session; // OpenTok session\n\n  var _screenSharingControl = [\n    '<div class=\"ots-video-control circle share-screen\" id=\"startScreenSharing\"></div>'\n  ].join('\\n');\n\n  var _screenSharingView = [\n    '<div class=\"hidden\" id=\"screenShareView\">',\n    '<div class=\"ots-feed-main-video\">',\n    '<div class=\"ots-feed-holder\" id=\"videoHolderScreenShare\"></div>',\n    '<div class=\"ots-feed-mask\"></div>',\n    '<img src=\"https://assets.tokbox.com/solutions/images/widget-video-mask.png\"/>',\n    '</div>',\n    '<div class=\"ots-feed-call-controls\" id=\"feedControlsFromScreen\">',\n    '<button class=\"ots-icon-screen active hidden\" id=\"endScreenShareBtn\"></button>',\n    '</div>',\n    '</div>'\n  ].join('\\n');\n\n  var _screenDialogsExtensions = [\n    /* eslint-disable max-len */\n    '<div id=\"dialog-form-chrome\" class=\"ots-ss-modal\" style=\"display: none;\">',\n    '<div class=\"ots-modal-body\">',\n    '<div class=\"ots-modal-title with-icon\">',\n    '<i class=\"ots-icon-share-large\"></i>',\n    '<span>Screen Share<br/>Extension Installation</span>',\n    '</div>',\n    '<p>You need a Chrome extension to share your screen. Install Screensharing Extension. Once you have installed, please, click the share screen button again.</p>',\n    '<button id=\"btn-install-plugin-chrome\" class=\"ots-btn-install\">Accept</button>',\n    '<button id=\"btn-cancel-plugin-chrome\" class=\"ots-cancel-btn-install\"></button>',\n    '</div>',\n    '</div>',\n    '<div id=\"dialog-form-ff\" class=\"ots-ss-modal\" style=\"display: none;\">',\n    '<div class=\"ots-modal-body\">',\n    '<div class=\"ots-modal-title with-icon\">',\n    '<i class=\"ots-icon-share-large\"></i>',\n    '<span>Screen Share<br/>Extension Installation</span>',\n    '</div>',\n    '<p>You need a Firefox extension to share your screen. Install Screensharing Extension. Once you have installed, refresh your browser and click the share screen button again.</p>',\n    '<a href=\"#\" id=\"btn-install-plugin-ff\" class=\"ots-btn-install\">Install extension</a>',\n    '<a href=\"#\" id=\"btn-cancel-plugin-ff\" class=\"ots-cancel-btn-install\"></a>',\n    '</div>',\n    '</div>'\n    /* eslint-enable max-len */\n  ].join('\\n');\n\n  /** Private Methods */\n\n  /** Analytics */\n  var _otkanalytics;\n\n  // vars for the analytics logs. Internal use\n  var _logEventData = {\n    clientVersion: 'js-vsol-x.y.z', // x.y.z filled by npm build script\n    componentId: 'screenSharingAccPack',\n    name: 'guidScreensharingAccPack',\n    actionInitialize: 'Init',\n    actionStart: 'Start',\n    actionEnd: 'End',\n    enableAnnotations: 'EnableAnnotations',\n    disableAnnotations: 'DisableAnnotations',\n    enableAudioScreenSharing: 'EnableAudioScreenSharing',\n    disableAudioScreenSharing: 'DisableAudioScreenSharing',\n    variationAttempt: 'Attempt',\n    variationError: 'Failure',\n    variationSuccess: 'Success',\n  };\n\n  var _logAnalytics = function () {\n\n    // init the analytics logs\n    var _source = window.location.href;\n\n    var otkanalyticsData = {\n      clientVersion: _logEventData.clientVersion,\n      source: _source,\n      componentId: _logEventData.componentId,\n      name: _logEventData.name\n    };\n\n    _otkanalytics = new OTKAnalytics(otkanalyticsData);\n\n    var sessionInfo = {\n      sessionId: _session.id,\n      connectionId: _session.connection.connectionId,\n      partnerId: _session.apiKey\n    };\n\n    _otkanalytics.addSessionInfo(sessionInfo);\n\n  };\n\n  var _log = function (action, variation) {\n\n    var data = {\n      action: action,\n      variation: variation\n    };\n    _otkanalytics.logEvent(data);\n  };\n\n  var _defaultScreenProperties = {\n    insertMode: 'append',\n    width: '100%',\n    height: '100%',\n    showControls: false,\n    style: {\n      buttonDisplayMode: 'off',\n    },\n    videoSource: 'window',\n  };\n\n  var _setupUI = function (parent) {\n    $('body').append(_this.screenDialogsExtensions);\n    _this.appendControl && $(_this.controlsContainer).append(_screenSharingControl);\n    $(parent).append(_screenSharingView);\n  };\n\n  var _toggleScreenSharingButton = function (show) {\n    $('#startScreenSharing')[show ? 'show' : 'hide']();\n  };\n\n  // Trigger event via common layer API\n  var _triggerEvent = function (event, data) {\n    if (_accPack) {\n      _accPack.triggerEvent(event, data);\n    }\n  };\n\n  /**\n   * Create a publisher for the screen.  If we're using annotation, we first need\n   * to create the annotion window and get a reference to its annotation container\n   * element so that we can pass it to the initPublisher function.\n   * @returns {promise} < Resolve: [Object] Container element for annotation in external window >\n   */\n  var _initPublisher = function (publisherOptions) {\n\n    var createPublisher = function (publisherDiv) {\n\n      var innerDeferred = $.Deferred();\n\n      var getContainer = function () {\n        if (publisherDiv) { return publisherDiv; }\n        if (typeof _this.screenSharingContainer === 'function') {\n          return document.querySelector(_this.screenSharingContainer('publisher', 'screen'));\n        } else {\n          return _this.screenSharingContainer;\n        }\n      }\n\n      var container = getContainer();\n      \n      var properties = Object.assign({}, _this.localScreenProperties || _defaultScreenProperties, publisherOptions);\n\n      _this.publisher = OT.initPublisher(container, properties, function (error) {\n        if (error) {\n          _triggerEvent('screenSharingError', error);\n          innerDeferred.reject(_.extend(_.omit(error, 'messsage'), {\n            message: 'Error starting the screen sharing',\n          }));\n        } else {\n          _this.publisher.on('mediaStopped', function () {\n            end();\n          });\n          innerDeferred.resolve();\n        }\n      });\n\n      return innerDeferred.promise();\n    };\n\n    var outerDeferred = $.Deferred();\n\n    if (_this.annotation && _this.externalWindow) {\n      _log(_logEventData.enableAnnotations, _logEventData.variationSuccess);\n\n      _accPack.setupExternalAnnotation()\n        .then(function (annotationWindow) {\n          _this.annotationWindow = annotationWindow || null;\n          var annotationElements = annotationWindow.createContainerElements();\n          createPublisher(annotationElements.publisher)\n            .then(function () {\n              outerDeferred.resolve(annotationElements.annotation);\n            });\n\n        });\n    } else {\n\n      createPublisher()\n        .then(function () {\n          outerDeferred.resolve();\n        });\n\n    }\n\n    return outerDeferred.promise();\n  };\n\n\n  /**\n   * Start publishing the screen\n   * @param annotationContainer\n   */\n  var _publish = function (annotationContainer) {\n\n    _session.publish(_this.publisher, function (error) {\n      if (error) {\n\n        // Let's write our own error message\n        var customError = _.omit(error, 'message');\n\n        if (error.code === 1500 && navigator.userAgent.indexOf('Firefox') !== -1) {\n          $('#dialog-form-ff').toggle();\n        } else {\n\n          var errorMessage;\n\n          if (error.code === 1010) {\n            errorMessage = 'Check your network connection';\n          } else {\n            errorMessage = 'Error sharing the screen';\n          }\n\n          customError.message = errorMessage;\n          _triggerEvent('screenSharingError', customError);\n          _log(_logEventData.actionStart, _logEventData.variationError);\n        }\n      } else {\n        if (_this.annotation && _this.externalWindow) {\n          _accPack.linkAnnotation(_this.publisher, annotationContainer, _this.annotationWindow);\n          _log(_logEventData.actionInitialize, _logEventData.variationSuccess);\n        }\n        _active = true;\n        _triggerEvent('startScreenSharing', _this.publisher);\n        _log(_logEventData.actionStart, _logEventData.variationSuccess);\n      }\n    });\n\n  };\n\n  /**\n   * Stop publishing the screen\n   */\n  var _stopPublishing = function () {\n    _session.unpublish(_this.publisher);\n  };\n\n  /** Public Methods */\n\n  var extensionAvailable = function () {\n\n    var deferred = $.Deferred();\n\n    if (window.location.protocol === 'http:' && !_this.dev) {\n      alert(\"Screensharing only works under 'https', please add 'https://' in front of your debugger url.\");\n      deferred.reject('https required');\n    }\n\n    OT.checkScreenSharingCapability(function (response) {\n      if (!response.supported || response.extensionRegistered === false) {\n        alert('This browser does not support screen sharing! Please use Chrome, Firefox or IE!');\n        deferred.reject('browser support not available');\n      } else if (response.extensionInstalled === false) {\n        if (detectBrowser() === 'Firefox') {\n          if (!firefoxExtensionRequired()) {\n            deferred.resolve();\n          } else {\n            $('#dialog-form-ff').toggle();\n            deferred.reject('screensharing extension not installed');\n          }\n        } else {\n          $('#dialog-form-chrome').toggle();\n          deferred.reject('screensharing extension not installed');\n        }\n      } else {\n        deferred.resolve();\n      }\n    });\n\n    return deferred.promise();\n\n  };\n  /**\n   * @param {Object} [publisherOptions]  - Properties for the screen sharing publisher.\n   */\n  var start = function (publisherOptions) {\n    _log(_logEventData.actionStart, _logEventData.variationAttempt);\n    extensionAvailable(_this.extensionID, _this.extensionPathFF)\n      .then(_initPublisher(publisherOptions))\n      .then(_publish)\n      .fail(function (error) {\n        console.log('Error starting screensharing: ', error);\n        _log(_logEventData.actionStart, _logEventData.variationError);\n      });\n  };\n\n  var end = function (callEnded) {\n    _stopPublishing();\n    _active = false;\n    if (callEnded) {\n      _toggleScreenSharingButton(false);\n    }\n    _triggerEvent('endScreenSharing', _this.publisher);\n    _log(_logEventData.actionEnd, _logEventData.variationSuccess);\n  };\n\n  /** Events */\n\n  var _registerEvents = function () {\n\n    if (!_accPack) {\n      return;\n    }\n\n    var events = ['startScreenSharing', 'endScreenSharing', 'screenSharingError'];\n    _accPack.registerEvents(events);\n  };\n\n  var _addScreenSharingListeners = function () {\n\n    var startOrEnd = _.throttle(function () {\n      !!_active ? end() : start();\n    }, 750);\n\n    $('#startScreenSharing').on('click', startOrEnd);\n\n    /** Handlers for screensharing extension modal */\n    $('#btn-install-plugin-chrome').on('click', function () {\n      window.open(['https://chrome.google.com/webstore/detail/', _this.extensionID].join(''), '_blank');\n      $('#dialog-form-chrome').toggle();\n    });\n\n    $('#btn-cancel-plugin-chrome').on('click', function () {\n      $('#dialog-form-chrome').toggle();\n    });\n\n    $('#btn-install-plugin-ff').prop('href', _this.extensionPathFF);\n\n    $('#btn-install-plugin-ff').on('click', function () {\n      $('#dialog-form-ff').toggle();\n    });\n\n    $('#btn-cancel-plugin-ff').on('click', function () {\n      $('#dialog-form-ff').toggle();\n    });\n\n    if (!!_accPack) {\n\n      _accPack.registerEventListener('startCall', function () {\n        _toggleScreenSharingButton(true);\n      });\n\n      _accPack.registerEventListener('endCall', function () {\n        if (_active) {\n          end(true);\n        } else {\n          _toggleScreenSharingButton(false);\n        }\n      });\n\n      _accPack.registerEventListener('annotationWindowClosed', function () {\n        end();\n      });\n    }\n\n  };\n\n  var _validateExtension = function (extensionID, extensionPathFF, appendWebStoreLink) {\n\n    if (detectBrowser() === 'Chrome') {\n      if (!extensionID || !extensionID.length) {\n        throw new Error('Error starting the screensharing. Chrome extensionID required');\n      } else {\n        if (appendWebStoreLink) {\n          $('<link/>', {\n            rel: 'chrome-webstore-item',\n            href: ['https://chrome.google.com/webstore/detail/', extensionID].join('')\n          }).appendTo('head');\n        }\n        OT.registerScreenSharingExtension('chrome', extensionID, 2);\n      }\n    }\n\n  };\n\n  var _validateOptions = function (options) {\n\n    if (!_.property('session', options)) {\n      throw new Error('Screen Share Acc Pack requires an OpenTok session');\n    }\n\n    _session = _.property('session')(options);\n    _accPack = _.property('accPack')(options);\n\n    var appendLink = options.appendWebStoreLink === undefined ? true : options.appendWebStoreLink;\n\n    _validateExtension(_.property('extensionID')(options), _.property('extensionPathFF')(options), appendLink);\n  };\n\n  /**\n   * @constructor\n   * Represents a screensharing component\n   * @param {Object} options\n   * @param {String} options.session\n   * @param {Object} [options.accPack]\n   * @param {String} [options.extensionID]\n   * @param {String} [options.appendWebStoreLink]\n   * @param {String} [options.extentionPathFF]\n   * @param {String} [options.screensharingParent]\n   * @param {String} [options.screenDialogsExtensions]\n   * @param {String | Function} [options.screensharingContainer]\n   */\n  var ScreenSharingAccPack = function (options) {\n\n    _this = this;\n\n    // Check for required options\n    _validateOptions(options);\n\n    // Extend our instance\n    var optionsProps = [\n      'annotation',\n      'externalWindow',\n      'extensionURL',\n      'extensionID',\n      'appendWebStoreLink',\n      'extensionPathFF',\n      'screenSharingContainer',\n      'screenSharingParent',\n      'controlsContainer',\n      'screenProperties',\n      'localScreenProperties',\n      'appendControl',\n      'dev',\n      'screenDialogsExtensions',\n    ];\n\n\n    _.extend(_this, _.defaults(_.pick(options, optionsProps), {\n      screenSharingParent: '#videoContainer',\n      screenSharingContainer: document.getElementById('videoHolderSharedScreen'),\n      controlsContainer: '#feedControls',\n      appendWebStoreLink: true,\n      appendControl: true,\n      screenDialogsExtensions: _screenDialogsExtensions,\n    }));\n\n\n\n    // Do UIy things\n    _setupUI(_this.screensharingParent);\n    _registerEvents();\n    _addScreenSharingListeners();\n\n    // init analytics logs\n    _logAnalytics();\n    _log(_logEventData.actionInitialize, _logEventData.variationSuccess);\n  };\n\n  ScreenSharingAccPack.prototype = {\n    constructor: ScreenSharingAccPack,\n    extensionAvailable: extensionAvailable,\n    start: start,\n    end: end\n  };\n\n  if (typeof exports === 'object') {\n    module.exports = ScreenSharingAccPack;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return ScreenSharingAccPack;\n    });\n  } else {\n    this.ScreenSharingAccPack = ScreenSharingAccPack;\n  }\n\n}.call(this));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}