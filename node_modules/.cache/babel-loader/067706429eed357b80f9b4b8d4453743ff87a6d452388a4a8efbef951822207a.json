{"ast":null,"code":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/* global OT */\n\n/* Dependencies */\nvar State = require('./state');\nvar _require = require('./errors'),\n  SDKError = _require.SDKError;\n\n/* Internal variables */\n\nvar stateMap = new WeakMap();\n\n/* Internal methods */\n\n/**\n * Ensures that we have the required credentials\n * @param {Object} credentials\n * @param {String} credentials.apiKey\n * @param {String} credentials.sessionId\n * @param {String} credentials.token\n * @returns {Object}\n */\nvar validateCredentials = function validateCredentials() {\n  var credentials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var required = ['apiKey', 'sessionId', 'token'];\n  required.forEach(function (credential) {\n    if (!credentials[credential]) {\n      throw new SDKError(credential + ' is a required credential', 'invalidParameters');\n    }\n  });\n  return credentials;\n};\n\n/**\n * Initialize an OpenTok publisher object\n * @param {String | Object} element - The target element\n * @param {Object} properties - The publisher properties\n * @returns {Promise} <resolve: Object, reject: Error>\n */\nvar initPublisher = function initPublisher(element, properties) {\n  return new Promise(function (resolve, reject) {\n    var publisher = OT.initPublisher(element, properties, function (error) {\n      error ? reject(error) : resolve(publisher);\n    });\n  });\n};\n\n/**\n * Binds and sets a single event listener on the OpenTok session\n * @param {String} event - The name of the event\n * @param {Function} callback\n */\nvar bindListener = function bindListener(target, context, event, callback) {\n  var paramsError = '\\'on\\' requires a string and a function to create an event listener.';\n  if (typeof event !== 'string' || typeof callback !== 'function') {\n    throw new SDKError(paramsError, 'invalidParameters');\n  }\n  target.on(event, callback.bind(context));\n};\n\n/**\n * Bind and set event listeners\n * @param {Object} target - An OpenTok session, publisher, or subscriber object\n * @param {Object} context - The context to which to bind event listeners\n * @param {Object | Array} listeners - An object (or array of objects) with\n *        eventName/callback k/v pairs\n */\nvar bindListeners = function bindListeners(target, context, listeners) {\n  /**\n   * Create listeners from an object with event/callback k/v pairs\n   * @param {Object} listeners\n   */\n  var createListenersFromObject = function createListenersFromObject(eventListeners) {\n    Object.keys(eventListeners).forEach(function (event) {\n      bindListener(target, context, event, eventListeners[event]);\n    });\n  };\n  if (Array.isArray(listeners)) {\n    listeners.forEach(function (listener) {\n      return createListenersFromObject(listener);\n    });\n  } else {\n    createListenersFromObject(listeners);\n  }\n};\n\n/**\n * @class\n * Represents an OpenTok SDK Wrapper\n */\n\nvar OpenTokSDK = function () {\n  /**\n   * Create an SDK Wrapper\n   * @param {Object} credentials\n   * @param {String} credentials.apiKey\n   * @param {String} credentials.sessionId\n   * @param {String} credentials.token\n   */\n  function OpenTokSDK(credentials) {\n    _classCallCheck(this, OpenTokSDK);\n    this.credentials = validateCredentials(credentials);\n    stateMap.set(this, new State());\n    this.session = OT.initSession(credentials.apiKey, credentials.sessionId);\n  }\n\n  /**\n   * Determines if a connection object is my local connection\n   * @param {Object} connection - An OpenTok connection object\n   * @returns {Boolean}\n   */\n\n  _createClass(OpenTokSDK, [{\n    key: 'isMe',\n    value: function isMe(connection) {\n      var session = this.session;\n      return session && session.connection.connectionId === connection.connectionId;\n    }\n\n    /**\n     * Wrap OpenTok session events\n     */\n  }, {\n    key: 'setInternalListeners',\n    value: function setInternalListeners() {\n      /**\n       * Wrap session events and update state when streams are created\n       * or destroyed\n       */\n      var state = stateMap.get(this);\n      this.session.on('streamCreated', function (_ref) {\n        var stream = _ref.stream;\n        return state.addStream(stream);\n      });\n      this.session.on('streamDestroyed', function (_ref2) {\n        var stream = _ref2.stream;\n        return state.removeStream(stream);\n      });\n      this.session.on('sessionConnected sessionReconnected', function () {\n        return state.setConnected(true);\n      });\n      this.session.on('sessionDisconnected', function () {\n        return state.setConnected(false);\n      });\n    }\n\n    /**\n     * Register a callback for a specific event, pass an object\n     * with event => callback key/values (or an array of objects)\n     * to register callbacks for multiple events.\n     * @param {String | Object | Array} [events] - The name of the events\n     * @param {Function} [callback]\n     * https://tokbox.com/developer/sdks/js/reference/Session.html#on\n     */\n  }, {\n    key: 'on',\n    value: function on() {\n      if (arguments.length === 1 && _typeof(arguments.length <= 0 ? undefined : arguments[0]) === 'object') {\n        bindListeners(this.session, this, arguments.length <= 0 ? undefined : arguments[0]);\n      } else if (arguments.length === 2) {\n        bindListener(this.session, this, arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1]);\n      }\n    }\n\n    /**\n     * Remove a callback for a specific event. If no parameters are passed,\n     * all callbacks for the session will be removed.\n     * @param {String} [events] - The name of the events\n     * @param {Function} [callback]\n     * https://tokbox.com/developer/sdks/js/reference/Session.html#off\n     */\n  }, {\n    key: 'off',\n    value: function off() {\n      var _session;\n      (_session = this.session).off.apply(_session, arguments);\n    }\n\n    /**\n     * Enable or disable local publisher audio\n     * @param {Boolean} enable\n     */\n  }, {\n    key: 'enablePublisherAudio',\n    value: function enablePublisherAudio(enable) {\n      var _stateMap$get$getPubS = stateMap.get(this).getPubSub(),\n        publishers = _stateMap$get$getPubS.publishers;\n      Object.keys(publishers.camera).forEach(function (publisherId) {\n        publishers.camera[publisherId].publishAudio(enable);\n      });\n    }\n\n    /**\n     * Enable or disable local publisher video\n     * @param {Boolean} enable\n     */\n  }, {\n    key: 'enablePublisherVideo',\n    value: function enablePublisherVideo(enable) {\n      var _stateMap$get$getPubS2 = stateMap.get(this).getPubSub(),\n        publishers = _stateMap$get$getPubS2.publishers;\n      Object.keys(publishers.camera).forEach(function (publisherId) {\n        publishers.camera[publisherId].publishVideo(enable);\n      });\n    }\n\n    /**\n     * Enable or disable local subscriber audio\n     * @param {String} streamId\n     * @param {Boolean} enable\n     */\n  }, {\n    key: 'enableSubscriberAudio',\n    value: function enableSubscriberAudio(streamId, enable) {\n      var _stateMap$get$all = stateMap.get(this).all(),\n        streamMap = _stateMap$get$all.streamMap,\n        subscribers = _stateMap$get$all.subscribers;\n      var subscriberId = streamMap[streamId];\n      var subscriber = subscribers.camera[subscriberId] || subscribers.screen[subscriberId];\n      subscriber && subscriber.subscribeToAudio(enable);\n    }\n\n    /**\n     * Enable or disable local subscriber video\n     * @param {String} streamId\n     * @param {Boolean} enable\n     */\n  }, {\n    key: 'enableSubscriberVideo',\n    value: function enableSubscriberVideo(streamId, enable) {\n      var _stateMap$get$all2 = stateMap.get(this).all(),\n        streamMap = _stateMap$get$all2.streamMap,\n        subscribers = _stateMap$get$all2.subscribers;\n      var subscriberId = streamMap[streamId];\n      var subscriber = subscribers.camera[subscriberId] || subscribers.screen[subscriberId];\n      subscriber && subscriber.subscribeToVideo(enable);\n    }\n\n    /**\n     * Create and publish a stream\n     * @param {String | Object} element - The target element\n     * @param {Object} properties - The publisher properties\n     * @param {Array | Object} [eventListeners] - An object (or array of objects) with\n     *        eventName/callback k/v pairs\n     * @param {Boolean} [preview] - Create a publisher with publishing to the session\n     * @returns {Promise} <resolve: Object, reject: Error>\n     */\n  }, {\n    key: 'publish',\n    value: function publish(element, properties) {\n      var _this = this;\n      var eventListeners = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var preview = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      return new Promise(function (resolve, reject) {\n        initPublisher(element, properties) // eslint-disable-next-line no-confusing-arrow\n        .then(function (publisher) {\n          eventListeners && bindListeners(publisher, _this, eventListeners);\n          if (preview) {\n            resolve(publisher);\n          } else {\n            _this.publishPreview(publisher).then(resolve).catch(reject);\n          }\n        }).catch(reject);\n      });\n    }\n\n    /**\n     * Publish a 'preview' stream to the session\n     * @param {Object} publisher - An OpenTok publisher object\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n  }, {\n    key: 'publishPreview',\n    value: function publishPreview(publisher) {\n      var _this2 = this;\n      return new Promise(function (resolve, reject) {\n        var state = stateMap.get(_this2);\n        _this2.session.publish(publisher, function (error) {\n          error && reject(error);\n          var type = publisher.stream.videoType;\n          state.addPublisher(type, publisher);\n          resolve(publisher);\n        });\n      });\n    }\n\n    /**\n     * Stop publishing a stream\n     * @param {Object} publisher - An OpenTok publisher object\n     */\n  }, {\n    key: 'unpublish',\n    value: function unpublish(publisher) {\n      var type = publisher.stream.videoType;\n      var state = stateMap.get(this);\n      this.session.unpublish(publisher);\n      state.removePublisher(type, publisher);\n    }\n\n    /**\n     * Subscribe to stream\n     * @param {Object} stream\n     * @param {String | Object} container - The id of the container or a reference to the element\n     * @param {Object} [properties]\n     * @param {Array | Object} [eventListeners] - An object (or array of objects) with\n     *        eventName/callback k/v pairs\n     * @returns {Promise} <resolve: empty, reject: Error>\n     * https://tokbox.com/developer/sdks/js/reference/Session.html#subscribe\n     */\n  }, {\n    key: 'subscribe',\n    value: function subscribe(stream, container, properties, eventListeners) {\n      var _this3 = this;\n      var state = stateMap.get(this);\n      return new Promise(function (resolve, reject) {\n        var subscriber = _this3.session.subscribe(stream, container, properties, function (error) {\n          if (error) {\n            reject(error);\n          } else {\n            state.addSubscriber(subscriber);\n            eventListeners && bindListeners(subscriber, _this3, eventListeners);\n            resolve(subscriber);\n          }\n        });\n      });\n    }\n\n    /**\n     * Unsubscribe from a stream and update the state\n     * @param {Object} subscriber - An OpenTok subscriber object\n     * @returns {Promise} <resolve: empty>\n     */\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe(subscriber) {\n      var _this4 = this;\n      var state = stateMap.get(this);\n      return new Promise(function (resolve) {\n        _this4.session.unsubscribe(subscriber);\n        state.removeSubscriber(subscriber);\n        resolve();\n      });\n    }\n\n    /**\n     * Connect to the OpenTok session\n     * @param {Array | Object} [eventListeners] - An object (or array of objects) with\n     *        eventName/callback k/v pairs\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n  }, {\n    key: 'connect',\n    value: function connect(eventListeners) {\n      var _this5 = this;\n      this.off();\n      this.setInternalListeners();\n      eventListeners && this.on(eventListeners);\n      return new Promise(function (resolve, reject) {\n        var token = _this5.credentials.token;\n        _this5.session.connect(token, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * Force a remote connection to leave the session\n     * @param {Object} connection\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n  }, {\n    key: 'forceDisconnect',\n    value: function forceDisconnect(connection) {\n      var _this6 = this;\n      return new Promise(function (resolve, reject) {\n        _this6.session.forceDisconnect(connection, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * Force the publisher of a stream to stop publishing the stream\n     * @param {Object} stream\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n  }, {\n    key: 'forceUnpublish',\n    value: function forceUnpublish(stream) {\n      var _this7 = this;\n      return new Promise(function (resolve, reject) {\n        _this7.session.forceUnpublish(stream, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * Send a signal using the OpenTok signaling apiKey\n     * @param {String} type\n     * @param {*} signalData\n     * @param {Object} [to] - An OpenTok connection object\n     * @returns {Promise} <resolve: empty, reject: Error>\n     * https://tokbox.com/developer/guides/signaling/js/\n     */\n  }, {\n    key: 'signal',\n    value: function signal(type, signalData, to) {\n      var _this8 = this;\n      var data = JSON.stringify(signalData);\n      var signal = to ? {\n        type: type,\n        data: data,\n        to: to\n      } : {\n        type: type,\n        data: data\n      };\n      return new Promise(function (resolve, reject) {\n        _this8.session.signal(signal, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * Disconnect from the OpenTok session\n     */\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this.session.disconnect();\n      stateMap.get(this).reset();\n    }\n\n    /**\n     * Return the state of the OpenTok session\n     * @returns {Object} Streams, publishers, subscribers, and stream map\n     */\n  }, {\n    key: 'state',\n    value: function state() {\n      return stateMap.get(this).all();\n    }\n  }]);\n  return OpenTokSDK;\n}();\nif (global === window) {\n  window.OpenTokSDK = OpenTokSDK;\n}\nmodule.exports = OpenTokSDK;","map":{"version":3,"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","State","require","_require","SDKError","stateMap","WeakMap","validateCredentials","credentials","arguments","undefined","required","forEach","credential","initPublisher","element","properties","Promise","resolve","reject","publisher","OT","error","bindListener","context","event","callback","paramsError","on","bind","bindListeners","listeners","createListenersFromObject","eventListeners","keys","Array","isArray","listener","OpenTokSDK","set","session","initSession","apiKey","sessionId","value","isMe","connection","connectionId","setInternalListeners","state","get","_ref","stream","addStream","_ref2","removeStream","setConnected","off","_session","apply","enablePublisherAudio","enable","_stateMap$get$getPubS","getPubSub","publishers","camera","publisherId","publishAudio","enablePublisherVideo","_stateMap$get$getPubS2","publishVideo","enableSubscriberAudio","streamId","_stateMap$get$all","all","streamMap","subscribers","subscriberId","subscriber","screen","subscribeToAudio","enableSubscriberVideo","_stateMap$get$all2","subscribeToVideo","publish","_this","preview","then","publishPreview","catch","_this2","type","videoType","addPublisher","unpublish","removePublisher","subscribe","container","_this3","addSubscriber","unsubscribe","_this4","removeSubscriber","connect","_this5","token","forceDisconnect","_this6","forceUnpublish","_this7","signal","signalData","to","_this8","data","JSON","stringify","disconnect","reset","global","window","module","exports"],"sources":["/home/awolf/WebstormProjects/accelerator-sample-apps-js/react-sample-app/node_modules/opentok-accelerator-core/dist/sdk-wrapper/sdkWrapper.js"],"sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* global OT */\n\n/* Dependencies */\nvar State = require('./state');\n\nvar _require = require('./errors'),\n    SDKError = _require.SDKError;\n\n/* Internal variables */\n\nvar stateMap = new WeakMap();\n\n/* Internal methods */\n\n/**\n * Ensures that we have the required credentials\n * @param {Object} credentials\n * @param {String} credentials.apiKey\n * @param {String} credentials.sessionId\n * @param {String} credentials.token\n * @returns {Object}\n */\nvar validateCredentials = function validateCredentials() {\n  var credentials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var required = ['apiKey', 'sessionId', 'token'];\n  required.forEach(function (credential) {\n    if (!credentials[credential]) {\n      throw new SDKError(credential + ' is a required credential', 'invalidParameters');\n    }\n  });\n  return credentials;\n};\n\n/**\n * Initialize an OpenTok publisher object\n * @param {String | Object} element - The target element\n * @param {Object} properties - The publisher properties\n * @returns {Promise} <resolve: Object, reject: Error>\n */\nvar initPublisher = function initPublisher(element, properties) {\n  return new Promise(function (resolve, reject) {\n    var publisher = OT.initPublisher(element, properties, function (error) {\n      error ? reject(error) : resolve(publisher);\n    });\n  });\n};\n\n/**\n * Binds and sets a single event listener on the OpenTok session\n * @param {String} event - The name of the event\n * @param {Function} callback\n */\nvar bindListener = function bindListener(target, context, event, callback) {\n  var paramsError = '\\'on\\' requires a string and a function to create an event listener.';\n  if (typeof event !== 'string' || typeof callback !== 'function') {\n    throw new SDKError(paramsError, 'invalidParameters');\n  }\n  target.on(event, callback.bind(context));\n};\n\n/**\n * Bind and set event listeners\n * @param {Object} target - An OpenTok session, publisher, or subscriber object\n * @param {Object} context - The context to which to bind event listeners\n * @param {Object | Array} listeners - An object (or array of objects) with\n *        eventName/callback k/v pairs\n */\nvar bindListeners = function bindListeners(target, context, listeners) {\n  /**\n   * Create listeners from an object with event/callback k/v pairs\n   * @param {Object} listeners\n   */\n  var createListenersFromObject = function createListenersFromObject(eventListeners) {\n    Object.keys(eventListeners).forEach(function (event) {\n      bindListener(target, context, event, eventListeners[event]);\n    });\n  };\n\n  if (Array.isArray(listeners)) {\n    listeners.forEach(function (listener) {\n      return createListenersFromObject(listener);\n    });\n  } else {\n    createListenersFromObject(listeners);\n  }\n};\n\n/**\n * @class\n * Represents an OpenTok SDK Wrapper\n */\n\nvar OpenTokSDK = function () {\n  /**\n   * Create an SDK Wrapper\n   * @param {Object} credentials\n   * @param {String} credentials.apiKey\n   * @param {String} credentials.sessionId\n   * @param {String} credentials.token\n   */\n  function OpenTokSDK(credentials) {\n    _classCallCheck(this, OpenTokSDK);\n\n    this.credentials = validateCredentials(credentials);\n    stateMap.set(this, new State());\n    this.session = OT.initSession(credentials.apiKey, credentials.sessionId);\n  }\n\n  /**\n   * Determines if a connection object is my local connection\n   * @param {Object} connection - An OpenTok connection object\n   * @returns {Boolean}\n   */\n\n\n  _createClass(OpenTokSDK, [{\n    key: 'isMe',\n    value: function isMe(connection) {\n      var session = this.session;\n\n      return session && session.connection.connectionId === connection.connectionId;\n    }\n\n    /**\n     * Wrap OpenTok session events\n     */\n\n  }, {\n    key: 'setInternalListeners',\n    value: function setInternalListeners() {\n      /**\n       * Wrap session events and update state when streams are created\n       * or destroyed\n       */\n      var state = stateMap.get(this);\n      this.session.on('streamCreated', function (_ref) {\n        var stream = _ref.stream;\n        return state.addStream(stream);\n      });\n      this.session.on('streamDestroyed', function (_ref2) {\n        var stream = _ref2.stream;\n        return state.removeStream(stream);\n      });\n      this.session.on('sessionConnected sessionReconnected', function () {\n        return state.setConnected(true);\n      });\n      this.session.on('sessionDisconnected', function () {\n        return state.setConnected(false);\n      });\n    }\n\n    /**\n     * Register a callback for a specific event, pass an object\n     * with event => callback key/values (or an array of objects)\n     * to register callbacks for multiple events.\n     * @param {String | Object | Array} [events] - The name of the events\n     * @param {Function} [callback]\n     * https://tokbox.com/developer/sdks/js/reference/Session.html#on\n     */\n\n  }, {\n    key: 'on',\n    value: function on() {\n      if (arguments.length === 1 && _typeof(arguments.length <= 0 ? undefined : arguments[0]) === 'object') {\n        bindListeners(this.session, this, arguments.length <= 0 ? undefined : arguments[0]);\n      } else if (arguments.length === 2) {\n        bindListener(this.session, this, arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1]);\n      }\n    }\n\n    /**\n     * Remove a callback for a specific event. If no parameters are passed,\n     * all callbacks for the session will be removed.\n     * @param {String} [events] - The name of the events\n     * @param {Function} [callback]\n     * https://tokbox.com/developer/sdks/js/reference/Session.html#off\n     */\n\n  }, {\n    key: 'off',\n    value: function off() {\n      var _session;\n\n      (_session = this.session).off.apply(_session, arguments);\n    }\n\n    /**\n     * Enable or disable local publisher audio\n     * @param {Boolean} enable\n     */\n\n  }, {\n    key: 'enablePublisherAudio',\n    value: function enablePublisherAudio(enable) {\n      var _stateMap$get$getPubS = stateMap.get(this).getPubSub(),\n          publishers = _stateMap$get$getPubS.publishers;\n\n      Object.keys(publishers.camera).forEach(function (publisherId) {\n        publishers.camera[publisherId].publishAudio(enable);\n      });\n    }\n\n    /**\n     * Enable or disable local publisher video\n     * @param {Boolean} enable\n     */\n\n  }, {\n    key: 'enablePublisherVideo',\n    value: function enablePublisherVideo(enable) {\n      var _stateMap$get$getPubS2 = stateMap.get(this).getPubSub(),\n          publishers = _stateMap$get$getPubS2.publishers;\n\n      Object.keys(publishers.camera).forEach(function (publisherId) {\n        publishers.camera[publisherId].publishVideo(enable);\n      });\n    }\n\n    /**\n     * Enable or disable local subscriber audio\n     * @param {String} streamId\n     * @param {Boolean} enable\n     */\n\n  }, {\n    key: 'enableSubscriberAudio',\n    value: function enableSubscriberAudio(streamId, enable) {\n      var _stateMap$get$all = stateMap.get(this).all(),\n          streamMap = _stateMap$get$all.streamMap,\n          subscribers = _stateMap$get$all.subscribers;\n\n      var subscriberId = streamMap[streamId];\n      var subscriber = subscribers.camera[subscriberId] || subscribers.screen[subscriberId];\n      subscriber && subscriber.subscribeToAudio(enable);\n    }\n\n    /**\n     * Enable or disable local subscriber video\n     * @param {String} streamId\n     * @param {Boolean} enable\n     */\n\n  }, {\n    key: 'enableSubscriberVideo',\n    value: function enableSubscriberVideo(streamId, enable) {\n      var _stateMap$get$all2 = stateMap.get(this).all(),\n          streamMap = _stateMap$get$all2.streamMap,\n          subscribers = _stateMap$get$all2.subscribers;\n\n      var subscriberId = streamMap[streamId];\n      var subscriber = subscribers.camera[subscriberId] || subscribers.screen[subscriberId];\n      subscriber && subscriber.subscribeToVideo(enable);\n    }\n\n    /**\n     * Create and publish a stream\n     * @param {String | Object} element - The target element\n     * @param {Object} properties - The publisher properties\n     * @param {Array | Object} [eventListeners] - An object (or array of objects) with\n     *        eventName/callback k/v pairs\n     * @param {Boolean} [preview] - Create a publisher with publishing to the session\n     * @returns {Promise} <resolve: Object, reject: Error>\n     */\n\n  }, {\n    key: 'publish',\n    value: function publish(element, properties) {\n      var _this = this;\n\n      var eventListeners = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var preview = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      return new Promise(function (resolve, reject) {\n        initPublisher(element, properties) // eslint-disable-next-line no-confusing-arrow\n        .then(function (publisher) {\n          eventListeners && bindListeners(publisher, _this, eventListeners);\n          if (preview) {\n            resolve(publisher);\n          } else {\n            _this.publishPreview(publisher).then(resolve).catch(reject);\n          }\n        }).catch(reject);\n      });\n    }\n\n    /**\n     * Publish a 'preview' stream to the session\n     * @param {Object} publisher - An OpenTok publisher object\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n\n  }, {\n    key: 'publishPreview',\n    value: function publishPreview(publisher) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var state = stateMap.get(_this2);\n        _this2.session.publish(publisher, function (error) {\n          error && reject(error);\n          var type = publisher.stream.videoType;\n          state.addPublisher(type, publisher);\n          resolve(publisher);\n        });\n      });\n    }\n\n    /**\n     * Stop publishing a stream\n     * @param {Object} publisher - An OpenTok publisher object\n     */\n\n  }, {\n    key: 'unpublish',\n    value: function unpublish(publisher) {\n      var type = publisher.stream.videoType;\n      var state = stateMap.get(this);\n      this.session.unpublish(publisher);\n      state.removePublisher(type, publisher);\n    }\n\n    /**\n     * Subscribe to stream\n     * @param {Object} stream\n     * @param {String | Object} container - The id of the container or a reference to the element\n     * @param {Object} [properties]\n     * @param {Array | Object} [eventListeners] - An object (or array of objects) with\n     *        eventName/callback k/v pairs\n     * @returns {Promise} <resolve: empty, reject: Error>\n     * https://tokbox.com/developer/sdks/js/reference/Session.html#subscribe\n     */\n\n  }, {\n    key: 'subscribe',\n    value: function subscribe(stream, container, properties, eventListeners) {\n      var _this3 = this;\n\n      var state = stateMap.get(this);\n      return new Promise(function (resolve, reject) {\n        var subscriber = _this3.session.subscribe(stream, container, properties, function (error) {\n          if (error) {\n            reject(error);\n          } else {\n            state.addSubscriber(subscriber);\n            eventListeners && bindListeners(subscriber, _this3, eventListeners);\n            resolve(subscriber);\n          }\n        });\n      });\n    }\n\n    /**\n     * Unsubscribe from a stream and update the state\n     * @param {Object} subscriber - An OpenTok subscriber object\n     * @returns {Promise} <resolve: empty>\n     */\n\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe(subscriber) {\n      var _this4 = this;\n\n      var state = stateMap.get(this);\n      return new Promise(function (resolve) {\n        _this4.session.unsubscribe(subscriber);\n        state.removeSubscriber(subscriber);\n        resolve();\n      });\n    }\n\n    /**\n     * Connect to the OpenTok session\n     * @param {Array | Object} [eventListeners] - An object (or array of objects) with\n     *        eventName/callback k/v pairs\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n\n  }, {\n    key: 'connect',\n    value: function connect(eventListeners) {\n      var _this5 = this;\n\n      this.off();\n      this.setInternalListeners();\n      eventListeners && this.on(eventListeners);\n      return new Promise(function (resolve, reject) {\n        var token = _this5.credentials.token;\n\n        _this5.session.connect(token, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * Force a remote connection to leave the session\n     * @param {Object} connection\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n\n  }, {\n    key: 'forceDisconnect',\n    value: function forceDisconnect(connection) {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this6.session.forceDisconnect(connection, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * Force the publisher of a stream to stop publishing the stream\n     * @param {Object} stream\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n\n  }, {\n    key: 'forceUnpublish',\n    value: function forceUnpublish(stream) {\n      var _this7 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this7.session.forceUnpublish(stream, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * Send a signal using the OpenTok signaling apiKey\n     * @param {String} type\n     * @param {*} signalData\n     * @param {Object} [to] - An OpenTok connection object\n     * @returns {Promise} <resolve: empty, reject: Error>\n     * https://tokbox.com/developer/guides/signaling/js/\n     */\n\n  }, {\n    key: 'signal',\n    value: function signal(type, signalData, to) {\n      var _this8 = this;\n\n      var data = JSON.stringify(signalData);\n      var signal = to ? { type: type, data: data, to: to } : { type: type, data: data };\n      return new Promise(function (resolve, reject) {\n        _this8.session.signal(signal, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * Disconnect from the OpenTok session\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this.session.disconnect();\n      stateMap.get(this).reset();\n    }\n\n    /**\n     * Return the state of the OpenTok session\n     * @returns {Object} Streams, publishers, subscribers, and stream map\n     */\n\n  }, {\n    key: 'state',\n    value: function state() {\n      return stateMap.get(this).all();\n    }\n  }]);\n\n  return OpenTokSDK;\n}();\n\nif (global === window) {\n  window.OpenTokSDK = OpenTokSDK;\n}\n\nmodule.exports = OpenTokSDK;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,QAAQ,GAAG,UAAUC,GAAG,EAAE;EAAE,OAAO,OAAOA,GAAG;AAAE,CAAC,GAAG,UAAUA,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAI,OAAOF,MAAM,KAAK,UAAU,IAAIE,GAAG,CAACC,WAAW,KAAKH,MAAM,IAAIE,GAAG,KAAKF,MAAM,CAACI,SAAS,GAAG,QAAQ,GAAG,OAAOF,GAAG;AAAE,CAAC;AAE5Q,IAAIG,YAAY,GAAG,YAAY;EAAE,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,KAAK,EAAE;IAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MAAE,IAAIE,UAAU,GAAGH,KAAK,CAACC,CAAC,CAAC;MAAEE,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;MAAED,UAAU,CAACE,YAAY,GAAG,IAAI;MAAE,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;MAAEC,MAAM,CAACC,cAAc,CAACT,MAAM,EAAEI,UAAU,CAACM,GAAG,EAAEN,UAAU,CAAC;IAAE;EAAE;EAAE,OAAO,UAAUO,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAE;IAAE,IAAID,UAAU,EAAEb,gBAAgB,CAACY,WAAW,CAACd,SAAS,EAAEe,UAAU,CAAC;IAAE,IAAIC,WAAW,EAAEd,gBAAgB,CAACY,WAAW,EAAEE,WAAW,CAAC;IAAE,OAAOF,WAAW;EAAE,CAAC;AAAE,CAAC,CAAC,CAAC;AAEnjB,SAASG,eAAeA,CAACC,QAAQ,EAAEJ,WAAW,EAAE;EAAE,IAAI,EAAEI,QAAQ,YAAYJ,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIK,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;;AAExJ;;AAEA;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE9B,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;EAC9BE,QAAQ,GAAGD,QAAQ,CAACC,QAAQ;;AAEhC;;AAEA,IAAIC,QAAQ,GAAG,IAAIC,OAAO,CAAC,CAAC;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,mBAAmB,GAAG,SAASA,mBAAmBA,CAAA,EAAG;EACvD,IAAIC,WAAW,GAAGC,SAAS,CAACtB,MAAM,GAAG,CAAC,IAAIsB,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAExF,IAAIE,QAAQ,GAAG,CAAC,QAAQ,EAAE,WAAW,EAAE,OAAO,CAAC;EAC/CA,QAAQ,CAACC,OAAO,CAAC,UAAUC,UAAU,EAAE;IACrC,IAAI,CAACL,WAAW,CAACK,UAAU,CAAC,EAAE;MAC5B,MAAM,IAAIT,QAAQ,CAACS,UAAU,GAAG,2BAA2B,EAAE,mBAAmB,CAAC;IACnF;EACF,CAAC,CAAC;EACF,OAAOL,WAAW;AACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,aAAa,GAAG,SAASA,aAAaA,CAACC,OAAO,EAAEC,UAAU,EAAE;EAC9D,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC5C,IAAIC,SAAS,GAAGC,EAAE,CAACP,aAAa,CAACC,OAAO,EAAEC,UAAU,EAAE,UAAUM,KAAK,EAAE;MACrEA,KAAK,GAAGH,MAAM,CAACG,KAAK,CAAC,GAAGJ,OAAO,CAACE,SAAS,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,IAAIG,YAAY,GAAG,SAASA,YAAYA,CAACvC,MAAM,EAAEwC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EACzE,IAAIC,WAAW,GAAG,sEAAsE;EACxF,IAAI,OAAOF,KAAK,KAAK,QAAQ,IAAI,OAAOC,QAAQ,KAAK,UAAU,EAAE;IAC/D,MAAM,IAAItB,QAAQ,CAACuB,WAAW,EAAE,mBAAmB,CAAC;EACtD;EACA3C,MAAM,CAAC4C,EAAE,CAACH,KAAK,EAAEC,QAAQ,CAACG,IAAI,CAACL,OAAO,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,aAAa,GAAG,SAASA,aAAaA,CAAC9C,MAAM,EAAEwC,OAAO,EAAEO,SAAS,EAAE;EACrE;AACF;AACA;AACA;EACE,IAAIC,yBAAyB,GAAG,SAASA,yBAAyBA,CAACC,cAAc,EAAE;IACjFzC,MAAM,CAAC0C,IAAI,CAACD,cAAc,CAAC,CAACrB,OAAO,CAAC,UAAUa,KAAK,EAAE;MACnDF,YAAY,CAACvC,MAAM,EAAEwC,OAAO,EAAEC,KAAK,EAAEQ,cAAc,CAACR,KAAK,CAAC,CAAC;IAC7D,CAAC,CAAC;EACJ,CAAC;EAED,IAAIU,KAAK,CAACC,OAAO,CAACL,SAAS,CAAC,EAAE;IAC5BA,SAAS,CAACnB,OAAO,CAAC,UAAUyB,QAAQ,EAAE;MACpC,OAAOL,yBAAyB,CAACK,QAAQ,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC,MAAM;IACLL,yBAAyB,CAACD,SAAS,CAAC;EACtC;AACF,CAAC;;AAED;AACA;AACA;AACA;;AAEA,IAAIO,UAAU,GAAG,YAAY;EAC3B;AACF;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,UAAUA,CAAC9B,WAAW,EAAE;IAC/BV,eAAe,CAAC,IAAI,EAAEwC,UAAU,CAAC;IAEjC,IAAI,CAAC9B,WAAW,GAAGD,mBAAmB,CAACC,WAAW,CAAC;IACnDH,QAAQ,CAACkC,GAAG,CAAC,IAAI,EAAE,IAAItC,KAAK,CAAC,CAAC,CAAC;IAC/B,IAAI,CAACuC,OAAO,GAAGnB,EAAE,CAACoB,WAAW,CAACjC,WAAW,CAACkC,MAAM,EAAElC,WAAW,CAACmC,SAAS,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;AACA;;EAGE7D,YAAY,CAACwD,UAAU,EAAE,CAAC;IACxB5C,GAAG,EAAE,MAAM;IACXkD,KAAK,EAAE,SAASC,IAAIA,CAACC,UAAU,EAAE;MAC/B,IAAIN,OAAO,GAAG,IAAI,CAACA,OAAO;MAE1B,OAAOA,OAAO,IAAIA,OAAO,CAACM,UAAU,CAACC,YAAY,KAAKD,UAAU,CAACC,YAAY;IAC/E;;IAEA;AACJ;AACA;EAEE,CAAC,EAAE;IACDrD,GAAG,EAAE,sBAAsB;IAC3BkD,KAAK,EAAE,SAASI,oBAAoBA,CAAA,EAAG;MACrC;AACN;AACA;AACA;MACM,IAAIC,KAAK,GAAG5C,QAAQ,CAAC6C,GAAG,CAAC,IAAI,CAAC;MAC9B,IAAI,CAACV,OAAO,CAACZ,EAAE,CAAC,eAAe,EAAE,UAAUuB,IAAI,EAAE;QAC/C,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAM;QACxB,OAAOH,KAAK,CAACI,SAAS,CAACD,MAAM,CAAC;MAChC,CAAC,CAAC;MACF,IAAI,CAACZ,OAAO,CAACZ,EAAE,CAAC,iBAAiB,EAAE,UAAU0B,KAAK,EAAE;QAClD,IAAIF,MAAM,GAAGE,KAAK,CAACF,MAAM;QACzB,OAAOH,KAAK,CAACM,YAAY,CAACH,MAAM,CAAC;MACnC,CAAC,CAAC;MACF,IAAI,CAACZ,OAAO,CAACZ,EAAE,CAAC,qCAAqC,EAAE,YAAY;QACjE,OAAOqB,KAAK,CAACO,YAAY,CAAC,IAAI,CAAC;MACjC,CAAC,CAAC;MACF,IAAI,CAAChB,OAAO,CAACZ,EAAE,CAAC,qBAAqB,EAAE,YAAY;QACjD,OAAOqB,KAAK,CAACO,YAAY,CAAC,KAAK,CAAC;MAClC,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACD9D,GAAG,EAAE,IAAI;IACTkD,KAAK,EAAE,SAAShB,EAAEA,CAAA,EAAG;MACnB,IAAInB,SAAS,CAACtB,MAAM,KAAK,CAAC,IAAIX,OAAO,CAACiC,SAAS,CAACtB,MAAM,IAAI,CAAC,GAAGuB,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;QACpGqB,aAAa,CAAC,IAAI,CAACU,OAAO,EAAE,IAAI,EAAE/B,SAAS,CAACtB,MAAM,IAAI,CAAC,GAAGuB,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,CAAC;MACrF,CAAC,MAAM,IAAIA,SAAS,CAACtB,MAAM,KAAK,CAAC,EAAE;QACjCoC,YAAY,CAAC,IAAI,CAACiB,OAAO,EAAE,IAAI,EAAE/B,SAAS,CAACtB,MAAM,IAAI,CAAC,GAAGuB,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAACtB,MAAM,IAAI,CAAC,GAAGuB,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,CAAC;MACtI;IACF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDf,GAAG,EAAE,KAAK;IACVkD,KAAK,EAAE,SAASa,GAAGA,CAAA,EAAG;MACpB,IAAIC,QAAQ;MAEZ,CAACA,QAAQ,GAAG,IAAI,CAAClB,OAAO,EAAEiB,GAAG,CAACE,KAAK,CAACD,QAAQ,EAAEjD,SAAS,CAAC;IAC1D;;IAEA;AACJ;AACA;AACA;EAEE,CAAC,EAAE;IACDf,GAAG,EAAE,sBAAsB;IAC3BkD,KAAK,EAAE,SAASgB,oBAAoBA,CAACC,MAAM,EAAE;MAC3C,IAAIC,qBAAqB,GAAGzD,QAAQ,CAAC6C,GAAG,CAAC,IAAI,CAAC,CAACa,SAAS,CAAC,CAAC;QACtDC,UAAU,GAAGF,qBAAqB,CAACE,UAAU;MAEjDxE,MAAM,CAAC0C,IAAI,CAAC8B,UAAU,CAACC,MAAM,CAAC,CAACrD,OAAO,CAAC,UAAUsD,WAAW,EAAE;QAC5DF,UAAU,CAACC,MAAM,CAACC,WAAW,CAAC,CAACC,YAAY,CAACN,MAAM,CAAC;MACrD,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;EAEE,CAAC,EAAE;IACDnE,GAAG,EAAE,sBAAsB;IAC3BkD,KAAK,EAAE,SAASwB,oBAAoBA,CAACP,MAAM,EAAE;MAC3C,IAAIQ,sBAAsB,GAAGhE,QAAQ,CAAC6C,GAAG,CAAC,IAAI,CAAC,CAACa,SAAS,CAAC,CAAC;QACvDC,UAAU,GAAGK,sBAAsB,CAACL,UAAU;MAElDxE,MAAM,CAAC0C,IAAI,CAAC8B,UAAU,CAACC,MAAM,CAAC,CAACrD,OAAO,CAAC,UAAUsD,WAAW,EAAE;QAC5DF,UAAU,CAACC,MAAM,CAACC,WAAW,CAAC,CAACI,YAAY,CAACT,MAAM,CAAC;MACrD,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDnE,GAAG,EAAE,uBAAuB;IAC5BkD,KAAK,EAAE,SAAS2B,qBAAqBA,CAACC,QAAQ,EAAEX,MAAM,EAAE;MACtD,IAAIY,iBAAiB,GAAGpE,QAAQ,CAAC6C,GAAG,CAAC,IAAI,CAAC,CAACwB,GAAG,CAAC,CAAC;QAC5CC,SAAS,GAAGF,iBAAiB,CAACE,SAAS;QACvCC,WAAW,GAAGH,iBAAiB,CAACG,WAAW;MAE/C,IAAIC,YAAY,GAAGF,SAAS,CAACH,QAAQ,CAAC;MACtC,IAAIM,UAAU,GAAGF,WAAW,CAACX,MAAM,CAACY,YAAY,CAAC,IAAID,WAAW,CAACG,MAAM,CAACF,YAAY,CAAC;MACrFC,UAAU,IAAIA,UAAU,CAACE,gBAAgB,CAACnB,MAAM,CAAC;IACnD;;IAEA;AACJ;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDnE,GAAG,EAAE,uBAAuB;IAC5BkD,KAAK,EAAE,SAASqC,qBAAqBA,CAACT,QAAQ,EAAEX,MAAM,EAAE;MACtD,IAAIqB,kBAAkB,GAAG7E,QAAQ,CAAC6C,GAAG,CAAC,IAAI,CAAC,CAACwB,GAAG,CAAC,CAAC;QAC7CC,SAAS,GAAGO,kBAAkB,CAACP,SAAS;QACxCC,WAAW,GAAGM,kBAAkB,CAACN,WAAW;MAEhD,IAAIC,YAAY,GAAGF,SAAS,CAACH,QAAQ,CAAC;MACtC,IAAIM,UAAU,GAAGF,WAAW,CAACX,MAAM,CAACY,YAAY,CAAC,IAAID,WAAW,CAACG,MAAM,CAACF,YAAY,CAAC;MACrFC,UAAU,IAAIA,UAAU,CAACK,gBAAgB,CAACtB,MAAM,CAAC;IACnD;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDnE,GAAG,EAAE,SAAS;IACdkD,KAAK,EAAE,SAASwC,OAAOA,CAACrE,OAAO,EAAEC,UAAU,EAAE;MAC3C,IAAIqE,KAAK,GAAG,IAAI;MAEhB,IAAIpD,cAAc,GAAGxB,SAAS,CAACtB,MAAM,GAAG,CAAC,IAAIsB,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;MAC7F,IAAI6E,OAAO,GAAG7E,SAAS,CAACtB,MAAM,GAAG,CAAC,IAAIsB,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;MAEvF,OAAO,IAAIQ,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;QAC5CL,aAAa,CAACC,OAAO,EAAEC,UAAU,CAAC,CAAC;QAAA,CAClCuE,IAAI,CAAC,UAAUnE,SAAS,EAAE;UACzBa,cAAc,IAAIH,aAAa,CAACV,SAAS,EAAEiE,KAAK,EAAEpD,cAAc,CAAC;UACjE,IAAIqD,OAAO,EAAE;YACXpE,OAAO,CAACE,SAAS,CAAC;UACpB,CAAC,MAAM;YACLiE,KAAK,CAACG,cAAc,CAACpE,SAAS,CAAC,CAACmE,IAAI,CAACrE,OAAO,CAAC,CAACuE,KAAK,CAACtE,MAAM,CAAC;UAC7D;QACF,CAAC,CAAC,CAACsE,KAAK,CAACtE,MAAM,CAAC;MAClB,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDzB,GAAG,EAAE,gBAAgB;IACrBkD,KAAK,EAAE,SAAS4C,cAAcA,CAACpE,SAAS,EAAE;MACxC,IAAIsE,MAAM,GAAG,IAAI;MAEjB,OAAO,IAAIzE,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;QAC5C,IAAI8B,KAAK,GAAG5C,QAAQ,CAAC6C,GAAG,CAACwC,MAAM,CAAC;QAChCA,MAAM,CAAClD,OAAO,CAAC4C,OAAO,CAAChE,SAAS,EAAE,UAAUE,KAAK,EAAE;UACjDA,KAAK,IAAIH,MAAM,CAACG,KAAK,CAAC;UACtB,IAAIqE,IAAI,GAAGvE,SAAS,CAACgC,MAAM,CAACwC,SAAS;UACrC3C,KAAK,CAAC4C,YAAY,CAACF,IAAI,EAAEvE,SAAS,CAAC;UACnCF,OAAO,CAACE,SAAS,CAAC;QACpB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;EAEE,CAAC,EAAE;IACD1B,GAAG,EAAE,WAAW;IAChBkD,KAAK,EAAE,SAASkD,SAASA,CAAC1E,SAAS,EAAE;MACnC,IAAIuE,IAAI,GAAGvE,SAAS,CAACgC,MAAM,CAACwC,SAAS;MACrC,IAAI3C,KAAK,GAAG5C,QAAQ,CAAC6C,GAAG,CAAC,IAAI,CAAC;MAC9B,IAAI,CAACV,OAAO,CAACsD,SAAS,CAAC1E,SAAS,CAAC;MACjC6B,KAAK,CAAC8C,eAAe,CAACJ,IAAI,EAAEvE,SAAS,CAAC;IACxC;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACD1B,GAAG,EAAE,WAAW;IAChBkD,KAAK,EAAE,SAASoD,SAASA,CAAC5C,MAAM,EAAE6C,SAAS,EAAEjF,UAAU,EAAEiB,cAAc,EAAE;MACvE,IAAIiE,MAAM,GAAG,IAAI;MAEjB,IAAIjD,KAAK,GAAG5C,QAAQ,CAAC6C,GAAG,CAAC,IAAI,CAAC;MAC9B,OAAO,IAAIjC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;QAC5C,IAAI2D,UAAU,GAAGoB,MAAM,CAAC1D,OAAO,CAACwD,SAAS,CAAC5C,MAAM,EAAE6C,SAAS,EAAEjF,UAAU,EAAE,UAAUM,KAAK,EAAE;UACxF,IAAIA,KAAK,EAAE;YACTH,MAAM,CAACG,KAAK,CAAC;UACf,CAAC,MAAM;YACL2B,KAAK,CAACkD,aAAa,CAACrB,UAAU,CAAC;YAC/B7C,cAAc,IAAIH,aAAa,CAACgD,UAAU,EAAEoB,MAAM,EAAEjE,cAAc,CAAC;YACnEf,OAAO,CAAC4D,UAAU,CAAC;UACrB;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDpF,GAAG,EAAE,aAAa;IAClBkD,KAAK,EAAE,SAASwD,WAAWA,CAACtB,UAAU,EAAE;MACtC,IAAIuB,MAAM,GAAG,IAAI;MAEjB,IAAIpD,KAAK,GAAG5C,QAAQ,CAAC6C,GAAG,CAAC,IAAI,CAAC;MAC9B,OAAO,IAAIjC,OAAO,CAAC,UAAUC,OAAO,EAAE;QACpCmF,MAAM,CAAC7D,OAAO,CAAC4D,WAAW,CAACtB,UAAU,CAAC;QACtC7B,KAAK,CAACqD,gBAAgB,CAACxB,UAAU,CAAC;QAClC5D,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDxB,GAAG,EAAE,SAAS;IACdkD,KAAK,EAAE,SAAS2D,OAAOA,CAACtE,cAAc,EAAE;MACtC,IAAIuE,MAAM,GAAG,IAAI;MAEjB,IAAI,CAAC/C,GAAG,CAAC,CAAC;MACV,IAAI,CAACT,oBAAoB,CAAC,CAAC;MAC3Bf,cAAc,IAAI,IAAI,CAACL,EAAE,CAACK,cAAc,CAAC;MACzC,OAAO,IAAIhB,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;QAC5C,IAAIsF,KAAK,GAAGD,MAAM,CAAChG,WAAW,CAACiG,KAAK;QAEpCD,MAAM,CAAChE,OAAO,CAAC+D,OAAO,CAACE,KAAK,EAAE,UAAUnF,KAAK,EAAE;UAC7CA,KAAK,GAAGH,MAAM,CAACG,KAAK,CAAC,GAAGJ,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDxB,GAAG,EAAE,iBAAiB;IACtBkD,KAAK,EAAE,SAAS8D,eAAeA,CAAC5D,UAAU,EAAE;MAC1C,IAAI6D,MAAM,GAAG,IAAI;MAEjB,OAAO,IAAI1F,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;QAC5CwF,MAAM,CAACnE,OAAO,CAACkE,eAAe,CAAC5D,UAAU,EAAE,UAAUxB,KAAK,EAAE;UAC1DA,KAAK,GAAGH,MAAM,CAACG,KAAK,CAAC,GAAGJ,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDxB,GAAG,EAAE,gBAAgB;IACrBkD,KAAK,EAAE,SAASgE,cAAcA,CAACxD,MAAM,EAAE;MACrC,IAAIyD,MAAM,GAAG,IAAI;MAEjB,OAAO,IAAI5F,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;QAC5C0F,MAAM,CAACrE,OAAO,CAACoE,cAAc,CAACxD,MAAM,EAAE,UAAU9B,KAAK,EAAE;UACrDA,KAAK,GAAGH,MAAM,CAACG,KAAK,CAAC,GAAGJ,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDxB,GAAG,EAAE,QAAQ;IACbkD,KAAK,EAAE,SAASkE,MAAMA,CAACnB,IAAI,EAAEoB,UAAU,EAAEC,EAAE,EAAE;MAC3C,IAAIC,MAAM,GAAG,IAAI;MAEjB,IAAIC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACL,UAAU,CAAC;MACrC,IAAID,MAAM,GAAGE,EAAE,GAAG;QAAErB,IAAI,EAAEA,IAAI;QAAEuB,IAAI,EAAEA,IAAI;QAAEF,EAAE,EAAEA;MAAG,CAAC,GAAG;QAAErB,IAAI,EAAEA,IAAI;QAAEuB,IAAI,EAAEA;MAAK,CAAC;MACjF,OAAO,IAAIjG,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;QAC5C8F,MAAM,CAACzE,OAAO,CAACsE,MAAM,CAACA,MAAM,EAAE,UAAUxF,KAAK,EAAE;UAC7CA,KAAK,GAAGH,MAAM,CAACG,KAAK,CAAC,GAAGJ,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;EAEE,CAAC,EAAE;IACDxB,GAAG,EAAE,YAAY;IACjBkD,KAAK,EAAE,SAASyE,UAAUA,CAAA,EAAG;MAC3B,IAAI,CAAC7E,OAAO,CAAC6E,UAAU,CAAC,CAAC;MACzBhH,QAAQ,CAAC6C,GAAG,CAAC,IAAI,CAAC,CAACoE,KAAK,CAAC,CAAC;IAC5B;;IAEA;AACJ;AACA;AACA;EAEE,CAAC,EAAE;IACD5H,GAAG,EAAE,OAAO;IACZkD,KAAK,EAAE,SAASK,KAAKA,CAAA,EAAG;MACtB,OAAO5C,QAAQ,CAAC6C,GAAG,CAAC,IAAI,CAAC,CAACwB,GAAG,CAAC,CAAC;IACjC;EACF,CAAC,CAAC,CAAC;EAEH,OAAOpC,UAAU;AACnB,CAAC,CAAC,CAAC;AAEH,IAAIiF,MAAM,KAAKC,MAAM,EAAE;EACrBA,MAAM,CAAClF,UAAU,GAAGA,UAAU;AAChC;AAEAmF,MAAM,CAACC,OAAO,GAAGpF,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}